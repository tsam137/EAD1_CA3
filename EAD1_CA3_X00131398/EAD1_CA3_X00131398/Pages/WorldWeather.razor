@page "/weather"
@inject HttpClient Http

<h3>Weather in Tokyo</h3>


<p>This component demonstrates fetching data from the server.</p>

<pre><code>app.UseCors(policy => policy.WithOrigins("http://localhost:5000/", "https://localhost:5001/%22) .AllowAnyMethod() .WithHeaders(HeaderNames.ContentType));</code></pre>

@if (data == null)
{
    <p><em>Loading...</em></p>
}
else
{

    <table class="table table-striped">
        <thead class="thead-dark">
            <tr>
                <th>Date</th>
                <th>Temp</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var weatherForecast in data.consolidated_weather)
            {
                <tr>
                    <td>@weatherForecast.applicable_date</td>
                    <td>@weatherForecast.the_temp</td>
                </tr>
            }
        </tbody>
    </table>
}
@code {

    WeatherData data;
    private Boolean found;
    private string errormessage;


    private async Task GetDataAsync()
    {
        try
        {
            string uri = "https://www.metaweather.com/api/location/1118370/";
            data = await Http.GetJsonAsync<WeatherData>(uri);
            found = true;
            errormessage = String.Empty;
        }
        catch (Exception e)
        {

            found = false;
            errormessage = e.Message;
        }

    }

    protected override async Task OnInitializedAsync()
    {
        await GetDataAsync();
    }


    public class WeatherData
    {
        public Consolidated_Weather[] consolidated_weather { get; set; }
        public DateTime time { get; set; }
        public DateTime sun_rise { get; set; }
        public DateTime sun_set { get; set; }
        public string timezone_name { get; set; }
        public Parent parent { get; set; }
        public Source[] sources { get; set; }
        public string title { get; set; }
        public string location_type { get; set; }
        public int woeid { get; set; }
        public string latt_long { get; set; }
        public string timezone { get; set; }
    }

    public class Parent
    {
        public string title { get; set; }
        public string location_type { get; set; }
        public int woeid { get; set; }
        public string latt_long { get; set; }
    }

    public class Consolidated_Weather
    {
        public long id { get; set; }
        public string weather_state_name { get; set; }
        public string weather_state_abbr { get; set; }
        public string wind_direction_compass { get; set; }
        public DateTime created { get; set; }
        public string applicable_date { get; set; }
        public float min_temp { get; set; }
        public float max_temp { get; set; }
        public float the_temp { get; set; }
        public float wind_speed { get; set; }
        public float wind_direction { get; set; }
        public float air_pressure { get; set; }
        public int humidity { get; set; }
        public float visibility { get; set; }
        public int predictability { get; set; }
    }

    public class Source
    {
        public string title { get; set; }
        public string slug { get; set; }
        public string url { get; set; }
        public int crawl_rate { get; set; }
    }

}
